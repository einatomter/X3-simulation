<?xml version="1.0"?>
<robot name="x3_rov" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- includes -->
	<!-- <xacro:include filename="$(find x3_sim)/urdf/materials.xacro" /> -->
	<xacro:include filename="$(find x3_sim)/urdf/macros2.xacro" />

	<!-- properties/variables -->
	<xacro:arg name="debug" default="0"/>
	<xacro:arg name="namespace" default="x3_rov"/>
	<xacro:arg name="inertial_reference_frame" default="world"/>
	<xacro:property name="neutrally_buoyant" value="0" />

	<xacro:property name="x3_length" value="0.485" />	<!-- m  -->
	<xacro:property name="x3_width"  value="0.257" /> 	<!-- m  -->
	<xacro:property name="x3_height" value="0.354" /> 	<!-- m  -->

	<xacro:property name="x3_cob"	 value="0 0 0.07}" /> <!-- center of balance xyz -->
	<xacro:property name="x3_mass"   value="900" />      <!-- kg -->
	<!-- calculations are based roughly on volume distribution -->
	<xacro:property name="x3_m_main"     value="${x3_mass * 0.66}" />
	<xacro:property name="x3_m_fin"      value="${x3_mass * 0.14}" />
	<xacro:property name="x3_m_thruster" value="${x3_mass * 0.03}" />


	<!-- * * * LINK DEFINITIONS * * * -->

	<!-- Dummy link to suppress warnings about root link inertia -->
	<!-- VERY IMPORTANT! Base link NEEDS to be target of hydrodynamic calculations -->
	<link name="$(arg namespace)/base_link">
	</link>

	<link name="$(arg namespace)/x3_rov_link">
		<xacro:box_inertial 
			mass="${x3_mass}" 
			x="${x3_length}" 
			y="${x3_width * 4/5}" 
			z="${x3_height}"
		>
			<origin xyz="0 0 0" rpy="0 0 0"/>
		</xacro:box_inertial>

		<collision>
			<origin xyz="${x3_length * 3/16} 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="${x3_length * 5/8} ${x3_width * 3/5} ${x3_height}"/>
			</geometry>
		</collision>

		<visual>
			<!-- <origin rpy="0 0 0" xyz="${x3_length * 3/16} 0 0"/> -->
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<!-- <box size="${x3_length*5/8} ${x3_width * 3/5} ${x3_height}"/> -->
				<mesh filename="package://x3_sim/models/x3_low_poly_smoothed.dae"/>
			</geometry>
			<material name="grey"/>
		</visual>
	</link>

	<!-- Attaching body to dummy link -->
	<joint name="$(arg namespace)/base_joint" type="fixed">
		<parent link="$(arg namespace)/base_link"/>
		<child link="$(arg namespace)/x3_rov_link"/>
	</joint>

	<!-- top fin -->
	<!-- <xacro:x3_fin
		suffix="top"
		parent_link="$(arg namespace)/base_link"
		origin_xyz="0 0 ${x3_height*(1/2 - 1/6)}"
		mass="${x3_m_fin}"
		radius="${x3_height * 1/6}"
		length="${x3_length/2}"
	/> -->
	<!-- bottom fin -->
	<!-- <xacro:x3_fin
		suffix="bot"
		parent_link="$(arg namespace)/base_link"
		origin_xyz="0 0 ${-x3_height*(1/2 - 1/6)}"
		mass="${x3_m_fin}"
		radius="${x3_height * 1/6}"
		length="${x3_length/2}"
	/> -->
	<!-- left thruster -->
	<!-- <xacro:x3_thruster
		suffix="left"
		parent_link="$(arg namespace)/base_link"
		origin_xyz="0 ${x3_width * 3/10} 0"
		mass="${x3_m_thruster}"
		radius="${x3_height * 1/8}"
		length="${x3_length * 1/3}"
		mirror="1"
	/> -->
	<!-- right thruster -->
	<!-- <xacro:x3_thruster
		suffix="right"
		parent_link="$(arg namespace)/base_link"
		origin_xyz="0 ${-(x3_width * 3/10)} 0"
		mass="${x3_m_thruster}"
		radius="${x3_height * 1/8}"
		length="${x3_length * 1/3}"
		mirror="-1"
	/> -->

	<!-- * * * SENSOR DEFINITIONS * * * -->

	<!-- camera -->
	<xacro:x3_camera
		suffix="1"
		parent_link="$(arg namespace)/base_link">
	<origin xyz="${x3_length*48/100} 0 ${x3_height*26/100}" rpy="0 0 0"/>
	</xacro:x3_camera>

	<!-- imu -->
	<xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/imu_snippets.xacro"/>
	<xacro:imu_plugin_macro
      namespace="$(arg namespace)"
      imu_suffix=""
      parent_link="$(arg namespace)/base_link"
      imu_topic="imu"
      mass_imu_sensor="0.015"
      gyroscope_noise_density="0.0003394"
      gyroscope_random_walk="0.000038785"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0087"
      accelerometer_noise_density="0.004"
      accelerometer_random_walk="0.006"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.1960"
      orientation_noise="0.01"
      enable_local_ned_frame="false"
      reference_frame="world"
      update_rate="100">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="${x3_length*48/100} 0 ${x3_height*26/100}" rpy="0 0 0"/>
    </xacro:imu_plugin_macro>

	<!-- pressure sensor -->
	<xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/pressure_snippets.xacro"/>
	<xacro:default_pressure
		namespace="$(arg namespace)"
		parent_link="$(arg namespace)/base_link">
	<!-- <origin xyz="0 0 0" rpy="0 0 0"/> -->
	<origin xyz="${x3_length*48/100} 0 ${x3_height*26/100}" rpy="0 0 0"/>
	</xacro:default_pressure>

	<!-- magnetometer -->
	<xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/magnetometer_snippets.xacro"/>
	<xacro:default_magnetometer
		namespace="$(arg namespace)"
		parent_link="$(arg namespace)/base_link">
	</xacro:default_magnetometer>


	<!-- THRUSTER DEFINITIONS -->

	<!-- Port-Aft (left-back)-->
	<xacro:thruster_macro thruster_id="0">
		<origin xyz="${-x3_length * 21/80} ${ (x3_width * 31/100)} 0" rpy="0 0 ${pi}"/>
	</xacro:thruster_macro>

	<!-- Stbd-Aft (right-back)-->
	<xacro:thruster_macro thruster_id="1">
		<origin xyz="${-x3_length * 21/80} ${-(x3_width * 31/100)} 0" rpy="0 0 ${pi}"/>
	</xacro:thruster_macro>

	<!-- Middle-Vert -->
	<xacro:thruster_macro thruster_id="2">
		<origin xyz="0 0 ${x3_height*(1/2 - 1/6)}" rpy="0 ${-pi/2} 0"/>
	</xacro:thruster_macro>

	<!-- Middle-Lat -->
	<xacro:thruster_macro thruster_id="3">
		<origin xyz="${x3_length * 17.5/100} 0 0" rpy="0 0 ${pi/2}"/>
	</xacro:thruster_macro>



	<!-- Creating hydrodynamic model of the system -->
	<xacro:rov_hydro_model
		parent_link="$(arg namespace)/base_link"
		mass="${x3_mass}"
		length="${x3_length}"
		width="${x3_width}"
		height="${x3_height}"
		cob="${x3_cob}"
		neutrally_buoyant="${neutrally_buoyant}"
	/>

	<!-- * * * GAZEBO CONFIGURATION * * * -->
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/$(arg namespace)</robotNamespace>
			<robotParam>/$(arg namespace)/robot_description</robotParam>
		</plugin>
		<!-- Default joint state publisher -->
		<plugin name="uuv_joint_state_publisher" filename="libuuv_joint_state_publisher.so">
			<robotNamespace>$(arg namespace)</robotNamespace>
			<updateRate>50</updateRate>
		</plugin>
	</gazebo>

	<!-- * * * PUBLISH MODEL STATE * * * -->
	<!-- <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>$(arg namespace)/x3_rov_link</bodyName>
      <topicName>odom</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>$(arg inertial_reference_frame)</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin> -->

</robot>