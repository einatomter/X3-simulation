<?xml version="1.0"?>
<launch>
    <arg name="namespace" default="x3_rov"/>
    <arg name="urdf_file" default="x3_v2.xacro"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="x" default="4"/>
    <arg name="y" default="4"/>
    <arg name="z" default="-93"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="-1.8"/>

    <param name="/$(arg namespace)/robot_description"
           command="$(find xacro)/xacro '$(find rov_hil)/urdf/$(arg urdf_file)'
		                debug:=$(arg debug)
                    namespace:=$(arg namespace)
                    inertial_reference_frame:=world" />

     <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" 
        pkg="uuv_descriptions" 
        type="spawn_model"
        respawn="false" 
        output="screen"
        args="-urdf -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
              -model $(arg namespace) -param /$(arg namespace)/robot_description">
    </node>

    <!-- Controller for joints not included within uuv joint state publisher -->
    <include file="$(find rov_hil)/launch/joint_state_controller.launch"/>
    
    <!-- Robot state publisher subscribes to the custom joint state publisher -->
    <node name="robot_state_publisher" 
        pkg="robot_state_publisher" 
        type="robot_state_publisher" 
        respawn="true" 
        output="screen">
      <remap from="robot_description" to="/$(arg namespace)/robot_description"/>
    </node>

</launch>
